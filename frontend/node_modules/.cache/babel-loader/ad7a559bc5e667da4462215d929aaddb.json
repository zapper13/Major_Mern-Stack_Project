{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_RESET, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n/**\r\n * This is a reducer function that handles user login actions and updates the state accordingly.\r\n * @param [state] - The initial state of the reducer, which is an empty object in this case.\r\n * @param action - The `action` parameter in this code refers to an object that describes the action\r\n * being performed. It typically has a `type` property that indicates the type of action being\r\n * performed, and may also have additional data in a `payload` property. The `switch` statement in this\r\n * code checks the `\r\n * @returns The userLoginReducer function returns an object with different properties based on the\r\n * action type received. If the action type is USER_LOGIN_REQUEST, it returns an object with a loading\r\n * property set to true. If the action type is USER_LOGIN_SUCCESS, it returns an object with a loading\r\n * property set to false and a userInfo property set to the action payload. If the action type is\r\n * USER_LOGIN_FAIL, it returns\r\n */\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n/**\r\n * This is a reducer function that handles the state changes for user registration, including loading,\r\n * success, failure, and logout actions.\r\n * @param [state] - The initial state of the reducer, which is an empty object in this case.\r\n * @param action - The `action` parameter in this code refers to an object that contains information\r\n * about the action being dispatched. It typically has a `type` property that describes the type of\r\n * action being performed, and may also have additional data in a `payload` property. The `switch`\r\n * statement in this reducer function\r\n * @returns The userRegisterReducer function returns an object with different properties based on the\r\n * action type received. If the action type is USER_REGISTER_REQUEST, it returns an object with the\r\n * loading property set to true. If the action type is USER_REGISTER_SUCCESS, it returns an object with\r\n * the loading property set to false and the userInfo property set to the action payload. If the action\r\n * type is USER_REGISTER_FAIL, it returns\r\n */\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const userDetailsReducer = (state = {\n  user: {}\n}, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload\n      };\n\n    case USER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_DETAILS_RESET:\n      return {\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n};\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        userInfo: action.payload\n      };\n\n    case USER_UPDATE_PROFILE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_UPDATE_PROFILE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const userListReducer = (state = {\n  users: []\n}, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_LIST_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload\n      };\n\n    case USER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LIST_RESET:\n      return {\n        users: []\n      };\n\n    default:\n      return state;\n  }\n};\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case USER_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const userUpdateReducer = (state = {\n  user: {}\n}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case USER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_UPDATE_RESET:\n      return {\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/test/Major_Mern-Stack_Project/frontend/src/reducers/userReducers.js"],"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_PROFILE_RESET","userLoginReducer","state","action","type","loading","userInfo","payload","error","userRegisterReducer","userDetailsReducer","user","userUpdateProfileReducer","success","userListReducer","users","userDeleteReducer","userUpdateReducer"],"mappings":"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","sourcesContent":["import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n/**\r\n * This is a reducer function that handles user login actions and updates the state accordingly.\r\n * @param [state] - The initial state of the reducer, which is an empty object in this case.\r\n * @param action - The `action` parameter in this code refers to an object that describes the action\r\n * being performed. It typically has a `type` property that indicates the type of action being\r\n * performed, and may also have additional data in a `payload` property. The `switch` statement in this\r\n * code checks the `\r\n * @returns The userLoginReducer function returns an object with different properties based on the\r\n * action type received. If the action type is USER_LOGIN_REQUEST, it returns an object with a loading\r\n * property set to true. If the action type is USER_LOGIN_SUCCESS, it returns an object with a loading\r\n * property set to false and a userInfo property set to the action payload. If the action type is\r\n * USER_LOGIN_FAIL, it returns\r\n */\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**\r\n * This is a reducer function that handles the state changes for user registration, including loading,\r\n * success, failure, and logout actions.\r\n * @param [state] - The initial state of the reducer, which is an empty object in this case.\r\n * @param action - The `action` parameter in this code refers to an object that contains information\r\n * about the action being dispatched. It typically has a `type` property that describes the type of\r\n * action being performed, and may also have additional data in a `payload` property. The `switch`\r\n * statement in this reducer function\r\n * @returns The userRegisterReducer function returns an object with different properties based on the\r\n * action type received. If the action type is USER_REGISTER_REQUEST, it returns an object with the\r\n * loading property set to true. If the action type is USER_REGISTER_SUCCESS, it returns an object with\r\n * the loading property set to false and the userInfo property set to the action payload. If the action\r\n * type is USER_REGISTER_FAIL, it returns\r\n */\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}